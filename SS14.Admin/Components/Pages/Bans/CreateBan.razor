@page "/bans/createban"
@using Content.Shared.Database
@using SS14.Admin.Helpers

<PageTitle>Create Ban</PageTitle>

<h1 class="text-2xl font-bold mb-4">Create New Ban</h1>
<h2 class="text-xl font-bold mb-4">Or Choose a Template</h2>

<!-- Ban Templates Dropdown -->
<div class="relative inline-block text-left mb-4">
    <button type="button" @onclick="ToggleDropdown"
            class="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none">
        Ban Templates
        <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
    </button>

    @if (IsDropdownOpen)
    {
        <div class="origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5">
            <div class="py-1">
                @foreach (var template in Templates)
                {
                    <a href="javascript:void(0)"
                       class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                       @onclick="() => UseTemplate(template.Id)">
                        @template.Title
                    </a>
                }
            </div>
        </div>
    }
</div>

<EditForm Model="_banModel" OnValidSubmit="HandleValidSubmit" FormName="CreateBanForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Name or User ID -->
    <div class="mb-4">
        <label class="block mb-1">Name or user ID</label>
        <InputText @bind-Value="_banModel.NameOrUid" class="border p-2 w-full" />
    </div>

    <!-- IP address/CIDR -->
    <div class="mb-4">
        <label class="block mb-1">IP Address/CIDR</label>
        <div class="flex gap-2">
            <InputText @bind-Value="_banModel.IP" class="border p-2 w-full" />
            <div class="flex items-center">
                <InputCheckbox @bind-Value="_banModel.UseLatestIp" class="mr-2" />
                <label>Use latest</label>
            </div>
        </div>
    </div>

    <!-- HWID -->
    <div class="mb-4">
        <label class="block mb-1">HWID</label>
        <div class="flex gap-2">
            <InputText @bind-Value="_banModel.HWid" class="border p-2 w-full" />
            <div class="flex items-center">
                <InputCheckbox @bind-Value="_banModel.UseLatestHwid" class="mr-2" />
                <label>Use latest</label>
            </div>
        </div>
    </div>

    <!-- Duration (in minutes) -->
    <div class="mb-4">
        <label class="block mb-1">Minutes (0: Permanent)</label>
        <InputNumber @bind-Value="_banModel.LengthMinutes" class="border p-2 w-full" />
    </div>

    <!-- Reason -->
    <div class="mb-4">
        <label class="block mb-1">Reason</label>
        <InputTextArea @bind-Value="_banModel.Reason" class="border p-2 w-full" />
    </div>

    <!-- Severity -->
    <div class="mb-4">
        <label class="block mb-1">Severity</label>
        <InputSelect @bind-Value="_banModel.Severity" class="border p-2 w-full">
            @foreach (var severity in Enum.GetValues<NoteSeverity>())
            {
                <option value="@severity">@severity</option>
            }
        </InputSelect>
    </div>

    <!-- Settings -->
    <div class="mb-4">
        <label class="block mb-1">Settings</label>
        <div class="flex items-center">
            <InputCheckbox @bind-Value="_banModel.Hidden" class="mr-2" />
            <label>Hidden from player</label>
        </div>
    </div>

    @*<!-- Exemption Flags -->
    <div class="mb-4">
        <label class="block mb-1">Exemption Flags</label>
        @foreach (var (flag, display) in BanExemptions.GetExemptions())
        {
            <div class="form-check">
                <InputCheckbox id=@("exemption_" + flag.ToString()) class="form-check-input" @bind-Value="Exemptions[flag]" />
                <label for=@("exemption_" + flag.ToString()) class="form-check-label">@display</label>
            </div>
        }
    </div>*@

    <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded">
        Create Ban
    </button>
</EditForm>
